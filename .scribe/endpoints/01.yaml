name: Courses
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/courses
    metadata:
      groupName: Courses
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all courses.'
      description: 'This endpoint retrieves a list of all available courses.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "title": "Introduction to Programming",
                "description": "Learn the basics of programming",
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/courses
    metadata:
      groupName: Courses
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new course - only for teachers.'
      description: 'This endpoint allows a teacher to create a new course.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the course.'
        required: true
        example: 'Introduction to Programming'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'The description of the course.'
        required: true
        example: 'Learn the basics of programming.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: 'Introduction to Programming'
      description: 'Learn the basics of programming.'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "title": "Introduction to Programming",
            "description": "Learn the basics of programming",
            "created_at": "2024-01-01T00:00:00.000000Z",
            "updated_at": "2024-01-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "title": ["The title field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/courses/{id}'
    metadata:
      groupName: Courses
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get course by ID.'
      description: 'This endpoint retrieves the details of a specific course by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "title": "Introduction to Programming",
            "description": "Learn the basics of programming",
            "created_at": "2024-01-01T00:00:00.000000Z",
            "updated_at": "2024-01-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Course not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/courses/{id}'
    metadata:
      groupName: Courses
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a course - only for teachers.'
      description: 'This endpoint allows a teacher to update an existing course.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'optional The updated title of the course.'
        required: false
        example: 'Advanced Programming'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'optional The updated description of the course.'
        required: false
        example: 'Learn advanced programming techniques.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: 'Advanced Programming'
      description: 'Learn advanced programming techniques.'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "title": "Advanced Programming",
            "description": "Learn advanced programming techniques",
            "created_at": "2024-01-01T00:00:00.000000Z",
            "updated_at": "2024-01-02T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Course not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/courses/{id}'
    metadata:
      groupName: Courses
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a course - only for teachers.'
      description: 'This endpoint allows a teacher to delete a course.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Course deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Course not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/join-course/{courseId}'
    metadata:
      groupName: Courses
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Student joins a course.'
      description: 'This endpoint allows a student to join a course.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      courseId:
        name: courseId
        description: 'The ID of the course to join.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      courseId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successfully joined the course"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Course not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
